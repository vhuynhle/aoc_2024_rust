use std::sync::LazyLock;
use regex::Regex;


fn main() {
    let lines = read_input();

    let total_sum_mul: i32 = lines.iter().map(|line| sum_mul(line)).sum();
    println!("Part 1: {}", total_sum_mul);
}

fn read_input() -> Vec<String> {
    std::io::stdin()
        .lines()
        .map(|result| result.expect("Error reading input"))
        .collect()
}

fn sum_mul(line: &str) -> i32 {
    static re:  LazyLock<Regex> = LazyLock::new(|| Regex::new(r"mul\((\d)+,(\d)+\)").unwrap());
    for (_, [num1_str, num2_str])

    0
}
